version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/static
      - ./media:/var/www/media
    depends_on:
      - web

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=intellidocs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups

  web:
    build: .
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/intellidocs
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./media:/app/media
      - ./static:/app/static
    command: gunicorn intellidocs.wsgi:application --bind 0.0.0.0:8000 --workers 4

  streamlit:
    build: .
    environment:
      - BACKEND_URL=http://web:8000
    depends_on:
      - web
    volumes:
      - ./frontend:/app/frontend
    command: streamlit run frontend/app.py --server.address=0.0.0.0 --server.port=8501

  celery:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/intellidocs
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./media:/app/media
    command: celery -A intellidocs worker -l info --concurrency=4

  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/intellidocs
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./media:/app/media
    command: celery -A intellidocs beat -l info

volumes:
  postgres_data:
  redis_data: